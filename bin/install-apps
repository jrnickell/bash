# !/bin/bash --login -x

echo -n "==> Enter your username: "
read USERNAME

echo -n "==> Choose a password for MySQL and phpMyAdmin: "
read PASSWORD

# home directory
cd ~

# repositories; hit [Enter] for each one to continue
sudo add-apt-repository ppa:webupd8team/sublime-text-2

# update packages
sudo apt-get update

# debconf utils
sudo apt-get install -y debconf-utils

# parameters
echo "mysql-server mysql-server/root_password password $PASSWORD" | sudo debconf-set-selections
echo "mysql-server mysql-server/root_password_again password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/admin-pass password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/app-pass password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/app-password-confirm password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | sudo debconf-set-selections

# general utilities
sudo apt-get install -y aptitude
sudo apt-get install -y wget
sudo apt-get install -y curl
sudo apt-get install -y git
sudo apt-get install -y vim
sudo apt-get install -y cron
sudo apt-get install -y build-essential
sudo apt-get install -y openssl
sudo apt-get install -y subversion

# sublime text
sudo apt-get install -y sublime-text

# chromium
sudo apt-get install -y chromium-browser

# filezilla
sudo apt-get install -y filezilla

# fonts
sudo apt-get install -y fonts-beteckna
sudo apt-get install -y fonts-breip
sudo apt-get install -y fonts-cabin
sudo apt-get install -y fonts-cabinsketch
sudo apt-get install -y fonts-cantarell
sudo apt-get install -y fonts-catalogue
sudo apt-get install -y fonts-comfortaa
sudo apt-get install -y fonts-dancingscript
sudo apt-get install -y fonts-deva-extra
sudo apt-get install -y fonts-dkg-handwriting
sudo apt-get install -y fonts-dosis
sudo apt-get install -y fonts-droid
sudo apt-get install -y fonts-dustin
sudo apt-get install -y fonts-ecolier-court
sudo apt-get install -y fonts-fanwood
sudo apt-get install -y fonts-freefont-ttf
sudo apt-get install -y fonts-inconsolata
sudo apt-get install -y fonts-jura
sudo apt-get install -y fonts-konatu
sudo apt-get install -y fonts-larabie-deco
sudo apt-get install -y fonts-larabie-straight
sudo apt-get install -y fonts-larabie-uncommon
sudo apt-get install -y fonts-lato
sudo apt-get install -y fonts-liberation
sudo apt-get install -y fonts-lindenhill
sudo apt-get install -y fonts-linux
sudo apt-get install -y fonts-linuxlibertine
sudo apt-get install -y fonts-lobster
sudo apt-get install -y fonts-lobstertwo
sudo apt-get install -y fonts-quattrocento
sudo apt-get install -y fonts-tomsontalks
sudo apt-get install -y fonts-ubuntu-font-family-console
sudo apt-get install -y fonts-ubuntu-title

# apache
sudo apt-get install -y apache2
echo "ServerName localhost" | sudo tee /etc/apache2/conf.d/fqdn
sudo a2enmod rewrite
sudo a2enmod headers
sudo a2enmod filter
sudo a2enmod expires
sudo a2enmod include

# php
sudo apt-get install -y php5
sudo apt-get install -y libapache2-mod-php5
sudo apt-get install -y php5-dev

# mysql
sudo apt-get install -y -q mysql-server
sudo apt-get install -y libapache2-mod-auth-mysql
sudo apt-get install -y php5-mysql

# sqlite
sudo apt-get install -y sqlite3

# phpmyadmin
sudo apt-get install -y -q phpmyadmin

# imagemagick
sudo apt-get install -y imagemagick

# php extensions
sudo apt-get install -y php-apc
sudo apt-get install -y php5-curl
sudo apt-get install -y php5-intl
sudo apt-get install -y php5-xdebug
sudo apt-get install -y php5-xmlrpc
sudo apt-get install -y php5-xsl
sudo apt-get install -y php5-sqlite
sudo apt-get install -y php5-imagick

# composer
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer

# pear
sudo apt-get install -y php-pear

# phpunit, apigen, phing, phpdox, and php qa tools
pear config-set auto_discover 1
sudo pear install --alldeps pear.phpunit.de/PHPUnit
sudo pear install --alldeps pear.apigen.org/apigen
sudo pear install --alldeps pear.phpqatools.org/phpqatools
sudo pear channel-discover pear.phing.info
pear config-set preferred_state alpha
sudo pear install --alldeps phing/phing
pear config-set preferred_state stable

# apigen temporary fix
sudo mkdir /usr/share/php/Texy
sudo ln -s /usr/share/php/texy/src/texy.php /usr/share/php/Texy/texy.php

# restart apache
sudo service apache2 restart

# nodejs
# now manually downloading and compiling from source
# following this guide:
# http://tnovelli.net/blog/blog.2011-08-27.node-npm-user-install.html
sudo apt-get install -y python-software-properties
sudo apt-get install -y python
sudo apt-get install -y g++
sudo apt-get install -y make

# ruby dependencies
sudo apt-get install -y libreadline6
sudo apt-get install -y libreadline6-dev
sudo apt-get install -y zlib1g
sudo apt-get install -y zlib1g-dev
sudo apt-get install -y libssl-dev
sudo apt-get install -y libyaml-dev
sudo apt-get install -y libsqlite3-dev
sudo apt-get install -y libxml2-dev
sudo apt-get install -y libxslt1-dev
sudo apt-get install -y autoconf
sudo apt-get install -y libc6-dev
sudo apt-get install -y libncurses5-dev
sudo apt-get install -y automake
sudo apt-get install -y libtool
sudo apt-get install -y bison
sudo apt-get install -y pkg-config
sudo apt-get install -y libmysqlclient-dev
sudo apt-get install -y libpq-dev

# rvm
curl -L get.rvm.io | bash -s stable --auto

# include profile in .bash_profile
echo "source ~/.profile" | tee -a ~/.bash_profile

# reset bash
. ~/.bash_profile

# ruby
rvm install 2.0.0
rvm --default use 2.0.0

# ruby on rails
gem install rails -v 4.0.0

# compass sass
gem update --system
gem install compass

# nodejs
touch ~/.npmrc
mkdir ~/.local
echo "root = /home/$USERNAME/.local/lib/node_modules" | tee -a ~/.npmrc
echo "binroot = /home/$USERNAME/.local/bin" | tee -a ~/.npmrc
echo "manroot = /home/$USERNAME/.local/share/man" | tee -a ~/.npmrc
cd ~/.local
wget "http://nodejs.org/dist/v0.10.18/node-v0.10.18.tar.gz"
tar xf node-v0.10.18.tar.gz
rm node-v0.10.18.tar.gz
mv node-v0.10.18 node
cd node
./configure --prefix=~/.local
make
make install
cd ~
ln -s .local/lib/node_modules .node_modules
echo 'PATH=/home/vagrant/.local/bin:$PATH' | tee -a ~/.bashrc

# java and ant
sudo apt-get install -y openjdk-7-jre
sudo apt-get install -y openjdk-7-jdk
sudo apt-get install -y ant

# jenkins
wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update
sudo apt-get install -y jenkins

# cleanup
sudo apt-get autoremove -y
sudo apt-get update
sudo apt-get upgrade -y
