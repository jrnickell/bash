#!/bin/bash --login

echo -n "==> Choose a password for MySQL and phpMyAdmin: "
read PASSWORD

echo -n "==> Enter your full name for Git configuration: "
read FULLNAME

echo -n "==> Enter your email address for Git configuration: "
read EMAILADD

# home directory
cd ~

# update packages
sudo apt-get update

# debconf utils
sudo apt-get install -y debconf-utils

# parameters
echo "mysql-server mysql-server/root_password password $PASSWORD" | sudo debconf-set-selections
echo "mysql-server mysql-server/root_password_again password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/admin-pass password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/app-pass password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/app-password-confirm password $PASSWORD" | sudo debconf-set-selections
echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | sudo debconf-set-selections

# general utilities
sudo apt-get install -y aptitude
sudo apt-get install -y wget
sudo apt-get install -y curl
sudo apt-get install -y git
sudo apt-get install -y vim
sudo apt-get install -y cron
sudo apt-get install -y build-essential
sudo apt-get install -y openssl
sudo apt-get install -y subversion
sudo apt-get install -y python-software-properties
sudo apt-get install -y python
sudo apt-get install -y gcc
sudo apt-get install -y g++
sudo apt-get install -y make
sudo apt-get install -y keychain

# git general config
git config --global user.name "$FULLNAME"
git config --global user.email "$EMAILADD"
git config --global color.ui true
git config --global push.default simple

# apache
sudo apt-get install -y apache2

# Update apache2.conf with backup
sudo cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf.bak
cat /etc/apache2/apache2.conf.bak | sed '
/^# Global/ a\
ServerName localhost
' | sudo tee /etc/apache2/apache2.conf

# apache modules
sudo a2enmod rewrite
sudo a2enmod headers
sudo a2enmod filter
sudo a2enmod expires
sudo a2enmod include
sudo a2enmod ssl

# php
sudo apt-get install -y php5
sudo apt-get install -y libapache2-mod-php5
sudo apt-get install -y php5-dev

# mysql
sudo apt-get install -y -q mysql-server
sudo apt-get install -y php5-mysql

# sqlite
sudo apt-get install -y sqlite3

# phpmyadmin
sudo apt-get install -y -q phpmyadmin

# php.ini settings for development
sudo sed -i "s/^error_reporting.*/error_reporting = E_ALL/" /etc/php5/apache2/php.ini
sudo sed -i "s/^display_errors.*/display_errors = On/" /etc/php5/apache2/php.ini
sudo sed -i "s/^error_reporting.*/error_reporting = E_ALL/" /etc/php5/cli/php.ini
sudo sed -i "s/^display_errors.*/display_errors = On/" /etc/php5/cli/php.ini
sudo sed -i "s/^disable_functions.*/disable_functions = /" /etc/php5/cli/php.ini
sudo sed -i "s/^;date\.timezone.*/date.timezone = UTC/" /etc/php5/apache2/php.ini
sudo sed -i "s/^;date\.timezone.*/date.timezone = UTC/" /etc/php5/cli/php.ini
sudo sed -i "s#^;include_path = \"\.:/usr/share/php\"#include_path = \".:/usr/share/php\"#" /etc/php5/apache2/php.ini
sudo sed -i "s#^;include_path = \"\.:/usr/share/php\"#include_path = \".:/usr/share/php\"#" /etc/php5/cli/php.ini

# pear
sudo apt-get install -y php-pear

# phpunit, apigen, and phing
sudo pear config-set auto_discover 1
sudo pear install --alldeps pear.phpunit.de/PHPUnit
sudo pear install --alldeps pear.apigen.org/apigen
sudo pear channel-discover pear.phing.info
sudo pear config-set preferred_state alpha
sudo pear install --alldeps phing/phing
sudo pear config-set preferred_state stable

# apigen temporary fix
sudo mkdir /usr/share/php/Texy
sudo ln -s /usr/share/php/texy/src/texy.php /usr/share/php/Texy/texy.php

# php extensions
sudo apt-get install -y php-apc
sudo apt-get install -y php5-curl
sudo apt-get install -y php5-intl
sudo apt-get install -y php5-xdebug
sudo apt-get install -y php5-xmlrpc
sudo apt-get install -y php5-xsl
sudo apt-get install -y php5-sqlite
sudo apt-get install -y php5-imagick
sudo apt-get install -y php5-json
sudo apt-get install -y php5-apcu
sudo apt-get install -y php5-mcrypt

# composer
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer

# ssl certificates
sudo mkdir -p /etc/apache2/ssl/000_default
sudo openssl req -x509 -nodes -days 1825 -newkey rsa:2048 -keyout /etc/apache2/ssl/000_default/apache.key -out /etc/apache2/ssl/000_default/apache.crt

# Update 000-default.conf with backup
sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bak
cat /etc/apache2/sites-available/000-default.conf.bak | sed '
/^# vim:/ i\
<VirtualHost *:443>\
\
    SSLEngine On\
    SSLCertificateFile /etc/apache2/ssl/000_default/apache.crt\
    SSLCertificateKeyFile /etc/apache2/ssl/000_default/apache.key\
\
    # The ServerName directive sets the request scheme, hostname and port that\
    # the server uses to identify itself. This is used when creating\
    # redirection URLs. In the context of virtual hosts, the ServerName\
    # specifies what hostname must appear in the request Host: header to\
    # match this virtual host. For the default virtual host (this file) this\
    # value is not decisive as it is used as a last resort host regardless.\
    # However, you must set it for any further virtual host explicitly.\
    #ServerName www.example.com\
\
    ServerAdmin webmaster@localhost\
    DocumentRoot /var/www/html\
\
    # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,\
    # error, crit, alert, emerg.\
    # It is also possible to configure the loglevel for particular\
    # modules, e.g.\
    #LogLevel info ssl:warn\
\
    ErrorLog ${APACHE_LOG_DIR}/error.log\
    CustomLog ${APACHE_LOG_DIR}/access.log combined\
\
    # For most configuration files from conf-available/, which are\
    # enabled or disabled at a global level, it is possible to\
    # include a line for only one particular virtual host. For example the\
    # following line enables the CGI configuration for this host only\
    # after it has been globally disabled with "a2disconf".\
    #Include conf-available/serve-cgi-bin.conf\
</VirtualHost>\
' | sudo tee /etc/apache2/sites-available/000-default.conf

# restart apache
cd ~
sudo service apache2 restart

# update PATH in .bashrc for nodejs
echo 'PATH=$PATH:$HOME/.local/bin' | tee -a ~/.bashrc

# ruby install
# following this guide:
# http://ryanbigg.com/2010/12/ubuntu-ruby-rvm-rails-and-you/
curl -L get.rvm.io | bash -s stable

# source rvm script and add to .bashrc
source ~/.rvm/scripts/rvm
echo 'source ~/.rvm/scripts/rvm' | tee -a ~/.bashrc

# install requirements
rvm requirements

# ruby
rvm install 2.1.1
rvm use 2.1.1
rvm --default use 2.1.1

# nodejs
# now manually downloading and compiling from source
# following this guide:
# http://tnovelli.net/blog/blog.2011-08-27.node-npm-user-install.html
touch ~/.npmrc
mkdir ~/.local
echo "root = /home/$USER/.local/lib/node_modules" | tee -a ~/.npmrc
echo "binroot = /home/$USER/.local/bin" | tee -a ~/.npmrc
echo "manroot = /home/$USER/.local/share/man" | tee -a ~/.npmrc
cd ~/.local
wget "http://nodejs.org/dist/v0.10.26/node-v0.10.26.tar.gz"
tar xf node-v0.10.26.tar.gz
rm node-v0.10.26.tar.gz
mv node-v0.10.26 node
cd node
./configure --prefix=~/.local
make
make install
cd ~
ln -s .local/lib/node_modules .node_modules
# update PATH right away
export PATH=$PATH:$HOME/.local/bin

# java
sudo apt-get install -y openjdk-7-jre
sudo apt-get install -y openjdk-7-jdk

# cleanup
cd ~
sudo apt-get -y autoremove
sudo apt-get update
sudo aptitude -y safe-upgrade

# Version information
echo -e "\nInstallation Complete!"
echo -e "======================"

echo -e "\nPython Version:"
echo -e "==============="
python -V

echo -e "\nJava Version:"
echo -e "============="
java -version

echo -e "\nRuby Version:"
echo -e "============="
ruby --version

echo -e "\nNode Version:"
echo -e "============="
node --version

echo -e "\nApache Version:"
echo -e "==============="
apache2 -v

echo -e "\nMySQL Version:"
echo -e "=============="
mysql -V

echo -e "\nPHP Version:"
echo -e "============"
php -v

echo -e "\nGit Version:"
echo -e "============"
git --version
